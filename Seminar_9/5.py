"""
üìå–û–±—ä–µ–¥–∏–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –∑–∞–¥–∞—á.
üìå–§—É–Ω–∫—Ü–∏—é —É–≥–∞–¥–∞–π–∫—É –∑–∞–¥–µ–∫–æ—Ä–∏—Ä—É–π—Ç–µ: –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.
üìå–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤.
"""
import json
import os
import random as rnd
from functools import wraps


def save_par(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        file_name = func.__name__ + '.json'
        if os.path.isfile(file_name):
            with open(file_name, 'r', encoding='utf-8')as f:
                data = json.load(f)
        else:
            data = dict()
        result = func(*args, **kwargs)
        data[result.__repr__()] = {'args': args, 'kwargs': kwargs}
        with open(file_name, 'w', encoding='utf-8')as f:
            json.dump(data, f, indent=4, ensure_ascii=False)
        return result
    return wrapper


def outer(count):
    def decor(func):
        res = []
        @wraps(func)
        def wrapper(*args, **kwargs):
            for _ in range(count):
                res.append(func(*args, **kwargs))
            return res
        return wrapper
    return decor


def check_n(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        a, b, *_ = args
        if a not in range(1, 101):
            print(f'–í–≤–µ–¥–µ–Ω–Ω–æ–µ —Ç–æ–±–æ–π —á–∏—Å–ª–æ {a} –≤–Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞!')
            a = rnd.randint(1, 100)
        if b not in range(1, 11):
            print(f'–í–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ {b} –≤–Ω–µ –¥–∏–∞–ø–æ–∑–æ–Ω–∞!')
            b = rnd.randint(1, 10)
        return func(a, b)
    return wrapper

@save_par
@outer(2)
@check_n
def quess_number(a, b):
    while b:
        print(f'—É–≥–∞–¥–∞–π —Å {b} –ø–æ–ø—ã—Ç–æ–∫')
        quess = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
        if quess < a:
            print('–±–æ–ª—å—à–µ')
        elif quess > a:
            print('–º–µ–Ω—å—à–µ')
        else:
            print(f'—Ç—ã —É–≥–∞–¥–∞–ª c {b} –ø–æ–ø—ã—Ç–∫–∏!')
            return f'—Ç—ã —É–≥–∞–¥–∞–ª c {b} –ø–æ–ø—ã—Ç–∫–∏!'
        b -= 1
    print('–£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏')
    return f'—Ç—ã –Ω–µ —É–≥–∞–¥–∞–ª'

quess_number(50, 5)