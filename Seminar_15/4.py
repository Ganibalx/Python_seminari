"""
ะคัะฝะบัะธั ะฟะพะปััะฐะตั ะฝะฐ ะฒัะพะด ัะตะบัั ะฒะธะดะฐ: โ1-ะน ัะตัะฒะตัะณ ะฝะพัะฑััโ, โ3ั ััะตะดะฐ ะผะฐัโ ะธ ั.ะฟ.
๐ะัะตะพะฑัะฐะทัะนัะต ะตะณะพ ะฒ ะดะฐัั ะฒ ัะตะบััะตะผ ะณะพะดั.
๐ะะพะณะธััะนัะต ะพัะธะฑะบะธ, ะตัะปะธ ัะตะบัั ะฝะต ัะพะพัะฒะตััะฒัะตั ัะพัะผะฐัั.
"""
import datetime
import logging


format = '{levelname:<5} - {asctime:<20} - {funcName} - {msg}'
logging.basicConfig(filename='my.log.', style='{', filemode='a', encoding='utf-8', level=logging.NOTSET, format=format)
logger = logging.getLogger(__name__)

DAYS = ['ะฟะพะฝะตะดะตะปัะฝะธะบ', 'ะฒัะพัะฝะธะบ', 'ััะตะดะฐ', 'ัะตัะฒะตัะณ', 'ะฟััะฝะธัะฐ', 'ััะฑะฑะพัะฐ', 'ะฒะพัะบัะตัะตะฝัะต']

MOUNTS = {
    'ัะฝะฒะฐัั': 1,
    'ัะตะฒัะฐะปั': 2,
    'ะผะฐัั': 3,
    'ะฐะฟัะตะปั': 4,
    'ะผะฐั': 5,
    'ะธัะฝั': 6,
    'ะธัะปั': 7,
    'ะฐะฒะณััั': 8,
    'ัะตะฝััะฑัั': 9,
    'ะพะบััะฑัั': 10,
    'ะฝะพัะฑัั': 11,
    'ะดะตะบะฐะฑัั': 12
}

def funk(data):
    try:
        count, days, mount = data.split()
        count = int(count[0])
        days = DAYS.index(days)
        for k, v in MOUNTS.items():
            if mount[:3] in k:
                mount = v
                break
        else:
            logger.error(msg=f'ะะตะฒะตัะฝัะน ัะพัะผะฐั ะผะตัััะฐ: {data}')
    except ValueError as e:
        logger.error(msg=e)
    start_day = 1
    for i in range(7):
        cur_data = datetime.date(year=datetime.datetime.now().year, month=mount, day=(start_day + i)).weekday()
        if cur_data == days:
            days = (start_day + i) + (7 * (count-1))
    return datetime.date(year=datetime.datetime.now().year, month=mount, day=days)


print(funk('5-ะน ัะตัะฒะตัะณ ะธัะฝั'))